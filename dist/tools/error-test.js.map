{"version":3,"file":"error-test.js","names":[],"sources":["../../src/tools/error-test.js"],"sourcesContent":["export default {\n  name: \"error_test\",\n  description: \"Test error handling in MCP tools\",\n  inputSchema: {\n    type: \"object\",\n    properties: {\n      errorType: {\n        type: \"string\",\n        enum: [\"throw\", \"reject\", \"syntax\", \"timeout\"],\n        description: \"Type of error to trigger\"\n      },\n      message: {\n        type: \"string\",\n        description: \"Custom error message\",\n        default: \"Test error\"\n      }\n    },\n    required: [\"errorType\"]\n  },\n  handler: async ({ errorType, message = \"Test error\" }) => {\n    switch (errorType) {\n      case \"throw\":\n        throw new Error(message);\n      \n      case \"reject\":\n        return Promise.reject(new Error(message));\n      \n      case \"syntax\":\n        // This will cause a runtime error\n        return undefined.nonExistentMethod();\n      \n      case \"timeout\":\n        // Simulate a long-running operation\n        await new Promise(resolve => setTimeout(resolve, 10000));\n        return \"This should timeout\";\n      \n      default:\n        return \"Unknown error type\";\n    }\n  }\n};"],"mappings":";AAAA,yBAAe;CACb,MAAM;CACN,aAAa;CACb,aAAa;EACX,MAAM;EACN,YAAY;GACV,WAAW;IACT,MAAM;IACN,MAAM;KAAC;KAAS;KAAU;KAAU;IAAU;IAC9C,aAAa;GACd;GACD,SAAS;IACP,MAAM;IACN,aAAa;IACb,SAAS;GACV;EACF;EACD,UAAU,CAAC,WAAY;CACxB;CACD,SAAS,OAAO,EAAE,WAAW,UAAU,cAAc,KAAK;AACxD,UAAQ,WAAR;GACE,KAAK,QACH,OAAM,IAAI,MAAM;GAElB,KAAK,SACH,QAAO,QAAQ,OAAO,IAAI,MAAM,SAAS;GAE3C,KAAK,SAEH,QAAO,SAAU,mBAAmB;GAEtC,KAAK;AAEH,UAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,IAAM;AACvD,WAAO;GAET,QACE,QAAO;EACV;CACF;AACF"}